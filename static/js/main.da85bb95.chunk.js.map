{"version":3,"sources":["components/Card/index.js","components/Wrapper/index.js","components/Navbar/index.js","components/Jumbotron/index.js","App.js","index.js"],"names":["Card","props","className","Clicked","onClick","handleClick","id","alt","name","src","image","Wrapper","children","Navbar","currentScore","highScore","Jumbotron","App","state","friends","shuffleArray","handleScore","console","log","timesClicked","forEach","element","clicked","setState","handleIncrement","shuffledArr","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","this","map","character","key","Component","ReactDOM","render","document","getElementById"],"mappings":"otEA0BeA,MAtBf,SAAcC,GACZ,OACI,yBAAKC,UAAW,QAAWD,EAAME,QAAUC,QAAS,kBAAMH,EAAMI,YAAaJ,EAAMK,MAC/E,yBAAKJ,UAAU,iBACX,yBAAKK,IAAKN,EAAMO,KAAMC,IAAKR,EAAMS,SAErC,yBAAKR,UAAU,eACX,4BACI,4BACI,yCAAuBD,EAAMO,U,MCJpCG,MAJf,SAAiBV,GACb,OAAO,yBAAKC,UAAU,mBAAmBD,EAAMW,W,MCcpCC,MAff,SAAgBZ,GACZ,OACI,4BAAQC,UAAU,6BACd,yBAAKA,UAAU,OACX,wBAAIA,UAAU,YAAd,8BACA,yBAAKA,UAAU,kBACX,qCAAU,8BAAOD,EAAMa,eACvB,yCAAc,8BAAOb,EAAMc,WAA3B,KACCd,EAAMW,a,MCCZI,MAVf,SAAmBf,GACjB,OACE,yBAAKC,UAAU,6BACb,yBAAKA,UAAU,aAAaD,EAAMW,SAChC,uBAAGV,UAAU,SAAb,yE,OCyFOe,E,4MAxFbC,MAAQ,CACNC,UACAJ,UAAW,EACXD,aAAc,EACdX,SAAS,G,EAGXE,YAAc,SAAAC,GACZ,EAAKc,eACL,EAAKC,YAAYf,GACjBgB,QAAQC,IAAI,EAAKL,MAAMM,e,EAGzBH,YAAc,SAAAf,GACZ,EAAKY,MAAMC,QAAQM,SAAQ,SAAAC,GACrBpB,IAAOoB,EAAQpB,KAA0B,IAApBoB,EAAQC,SAC/BD,EAAQC,SAAU,EAClB,EAAKC,SAAS,CAAEzB,SAAS,IACzB,EAAK0B,mBACIvB,IAAOoB,EAAQpB,KAA0B,IAApBoB,EAAQC,UAClC,EAAKT,MAAMJ,aAAe,EAAKI,MAAMH,WACvC,EAAKa,SAAS,CAAEb,UAAW,EAAKG,MAAMJ,eAExC,EAAKc,SAAS,CAAEd,aAAc,IAC9B,EAAKc,SAAS,CAAEzB,SAAS,IACzB,EAAKe,MAAMC,QAAQM,SAAQ,SAAAC,GAAO,OAAKA,EAAQC,SAAU,KACzDL,QAAQC,IAAI,EAAKL,MAAMC,c,EAK7BC,aAAe,WAEb,IAAMU,EAAc,EAAKC,QAAQ,EAAKb,MAAMC,SAE5C,EAAKS,SAAS,CAAEE,iB,EAIlBD,gBAAkB,WAEhB,EAAKD,SAAS,CAAEd,aAAc,EAAKI,MAAMJ,aAAe,K,EAI1DiB,QAAU,SAAAC,GAMR,IALA,IACEC,EACAC,EAFEC,EAAeH,EAAMI,OAKlB,IAAMD,GAEXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAEvB,OAAOD,G,uDAGC,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CACElB,aAAc0B,KAAKtB,MAAMJ,aACzBC,UAAWyB,KAAKtB,MAAMH,YAExB,kBAAC,EAAD,MACCyB,KAAKtB,MAAMC,QAAQsB,KAAI,SAAAC,GAAS,OAC/B,kBAAC,EAAD,CACEvC,QAAS,EAAKe,MAAMf,QACpBE,YAAa,EAAKA,YAClBC,GAAIoC,EAAUpC,GACdqC,IAAKD,EAAUpC,GACfE,KAAMkC,EAAUlC,KAChBE,MAAOgC,EAAUhC,gB,GAhFXkC,a,MCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.da85bb95.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction Card(props) {\r\n  return (\r\n      <div className={\"card \" + (props.Clicked)} onClick={() => props.handleClick( props.id)} >  \r\n          <div className=\"img-container\">\r\n              <img alt={props.name} src={props.image} />\r\n          </div>\r\n          <div className=\"img-content\">\r\n              <ul>\r\n                  <li>\r\n                      <strong>Name:</strong>{props.name}\r\n                  </li>\r\n               \r\n              </ul>\r\n          </div>\r\n      </div >\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n//<span onClick={() => props.removeFriend(props.id)} className=\"remove\"></span>\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\n\r\nfunction Wrapper(props){\r\n    return <div className=\"wrapper animate\">{props.children}</div>\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <header className=\"container-fluid fixed-top\" >\r\n            <div className=\"row\">\r\n                <h1 className=\"col-sm-8\">Frank Frazetta Memory Game</h1>\r\n                <nav className=\"col-sm-4 score\">\r\n                    <p>Score: <span>{props.currentScore}</span></p>\r\n                    <p>Top Score: <span>{props.highScore}</span> </p>\r\n                    {props.children}\r\n                </nav>\r\n            </div>\r\n        </header>        \r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction Jumbotron(props) {\r\n  return (\r\n    <div className=\"jumbotron jumbotron-fluid\">\r\n      <div className=\"container\">{props.children}\r\n        <p className=\"title\">Get Points By Clicking On An Image But Don't Click More Than Once!</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Jumbotron;","import React, { Component } from \"react\";\r\nimport Card from \"./components/Card\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Jumbotron from \"./components/Jumbotron\";\r\nimport friends from \"./friends.json\";\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    friends,\r\n    highScore: 0,\r\n    currentScore: 0,\r\n    Clicked: false\r\n  };\r\n\r\n  handleClick = id => {\r\n    this.shuffleArray();\r\n    this.handleScore(id);\r\n    console.log(this.state.timesClicked);\r\n  };\r\n\r\n  handleScore = id => {\r\n    this.state.friends.forEach(element => {\r\n      if (id === element.id && element.clicked === false) {\r\n        element.clicked = true;\r\n        this.setState({ Clicked: false });\r\n        this.handleIncrement();\r\n      } else if (id === element.id && element.clicked === true) {\r\n        if (this.state.currentScore > this.state.highScore) {\r\n          this.setState({ highScore: this.state.currentScore });\r\n        }\r\n        this.setState({ currentScore: 0 });\r\n        this.setState({ Clicked: true });\r\n        this.state.friends.forEach(element => (element.clicked = false));\r\n        console.log(this.state.friends);\r\n      }\r\n    });\r\n  };\r\n\r\n  shuffleArray = () => {\r\n    // Shuffle array of objects\r\n    const shuffledArr = this.shuffle(this.state.friends);\r\n    // Setting 'shuffledArr' as the new state\r\n    this.setState({ shuffledArr });\r\n  };\r\n\r\n  // handleIncrement increments this.state.currentScore by 1\r\n  handleIncrement = () => {\r\n    // Using setState method to update component's state\r\n    this.setState({ currentScore: this.state.currentScore + 1 });\r\n  };\r\n\r\n  // Function that takes an array as a parameter and shuffles it\r\n  shuffle = array => {\r\n    var currentIndex = array.length,\r\n      temporaryValue,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n    return array;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Navbar\r\n          currentScore={this.state.currentScore}\r\n          highScore={this.state.highScore}\r\n        />\r\n        <Jumbotron />\r\n        {this.state.friends.map(character => (\r\n          <Card\r\n            Clicked={this.state.Clicked}\r\n            handleClick={this.handleClick}\r\n            id={character.id}\r\n            key={character.id}\r\n            name={character.name}\r\n            image={character.image}\r\n        \r\n          />\r\n        ))}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}